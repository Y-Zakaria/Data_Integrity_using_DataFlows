#!/usr/bin/env bash

############################################################################
# @ddblock_begin copyright
#
# Copyright (c) 1997-2015
# Maryland DSPCAD Research Group, The University of Maryland at College Park 
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF MARYLAND BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF MARYLAND HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF MARYLAND SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# MARYLAND HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# @ddblock_end copyright
############################################################################

# Load a package that is to be setup based on standard
# DICE conventions.

# This script should be dxsourced. See documentation
# about the dxsource utility for more information. 
# 
# Usage: dxsource dx_load_package <pkg> <userdir>
#
# Here, <pkg> represents the name of the package to load,
# and <userdir> represents the corresponding
# user directory. 
# Based on
# DICE setup conventions, the <userdir> 
# directory should contain a subdirectory called \ddcode{startup},
# which contains the files <pkg>_startup, and uxdefs_<pkg>.

# The package to be loaded is started up from the 
# directory <userdir>
#
# Example: dxsource dx_load_package dicelang ~/user_dirs/dice_user/dicelang_user

# Export definitions to subprocesses
set -a


# Check argument count
if [ $# -ne 2 ]; then
    echo dx_load_package error: arg count
    return 1
fi

startup_dir="$2"
startup_script=startup/"$1"_startup

dxpushd "$startup_dir"

if [ $? -ne 0 ]; then
    echo dx_load_package error: could not go to 
    echo user directory $startup_dir 
    return 1
fi

if ! [ -f "$startup_script" ]; then
    echo dx_load_package error:
    echo could not find startup script $startup_script
    return 1
fi

dxsource "$startup_script"
dxpopd
