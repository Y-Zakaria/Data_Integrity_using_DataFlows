#!/usr/bin/env bash

# @ddblock_begin copyright
#
# Copyright (c) 1997-2015
# Maryland DSPCAD Research Group, The University of Maryland at College Park 
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF MARYLAND BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF MARYLAND HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF MARYLAND SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# MARYLAND HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# @ddblock_end copyright 

# Create a filtered copy of a development directory for distribution.
# Usage dxdist <development dir> <destination dir> [supplementary filter]
# A filtered copy of the specified development directory is placed in 
# the specified destination. 

# The optional supplementary filter argument specifies a the name of an
# executable (a script, function, or binary executable) that is used to perform
# additional, customized filtering of the directory copy. This filtering is
# performed after the ``standard'' filtering operations performed by default
# within dxdist. The supplementary filter is invoked on the destination
# directory, and applied recursively to all subdirectories within the
# destination directory. 

# For example, suppose the following function has been defined:
#
# \begin{verbatim}
# function release_filter {
#     rm -r -f .svn
# }
# \end{verbatim}
#
# Then applying this function with dxdist as a supplementary filter will
# have the effect of removing all subdirectories (at any nesting
# depth) named ``.svn'' from the distribution copy.

# The standard filtering done by dxdist involves removal of 
# and files and
# directories whose names begin with the string \ddcode{dxnote}. 
# Any such file or directory is interpreted automatically by \ddcode{dxdist}
# as an item that is ``private'' --- i.e., not for intended for release.
#
# Note that all filtering in this script is done on the directory subtree
# that is rooted at <destination_dir>. Thus, if <destination_dir> is
# actually the parent of the copied directory, then the filtering
# will be done on the whole parent tree.

# Export definitions to sub-processes (needed for dxdist_tree_function)
set -a

# This function is called by dxtrex to perform filtering on each directory
# in the directory tree copy.
function dxdist_tree_function {
    rm -r -f dxnote*
}

if [[ ($# -lt 2) || ($# -gt 3) ]]; then
    echo dxdist error: arg count
    exit 1
fi

echo dxdist: creating a copy of $1 in $2
cp -r "$1" "$2"
dxvalidate dxdist error: could not create directory copy

echo dxdist: filtering the directory copy
dxpushd "$2"
dxvalidate dxdist error: could not go to destination directory
dxtrex dxdist_tree_function

supplementary_filter="$3"
if [ -n "$supplementary_filter" ]; then
    echo dxdist: calling supplementary filter $supplementary_filter
    dxtrex $supplementary_filter
fi

dxpopd
echo dxdist: finished

