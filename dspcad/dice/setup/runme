#!/usr/bin/env bash

################################################################################
# @ddblock_begin copyright
#
# Copyright (c) 1997-2015
# Maryland DSPCAD Research Group, The University of Maryland at College Park 
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF MARYLAND BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF MARYLAND HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF MARYLAND SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# MARYLAND HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# @ddblock_end copyright
################################################################################

################################################################################
# This script is intended to be run as: 
# source "$UXDICE"/setup/runme <platform_id>  
# from the parent directory of dice_user once UXDICE is properly set. Here, 
# <platform_id> is optional. If users do not configure <Platform_id>, it
# automatically detects the platform of users.
# Also, users can manually configure platform id. it could be of the form: 
# macos, lin, sol, or win. The dice_user 
# directory will be created if it is not already there. 
#
# Usage format 1: source "$UXDICE"/setup/runme
# Usage format 2: source "$UXDICE"/setup/runme <platform_id>
# Usage format 3: source "$UXDICE"/setup/runme <platform_id> nobuild
#
# The nobuild argument is optional. If it is not present, then 
# the package will be built opon setup.
#
# The variables UXDICE should be set before calling this script
################################################################################

# Export definitions to sub-processes
set -a

lxprog="dice-setup-runme"
lxbuild=""

# Check the arguments usage
if [[ $# -eq 1 ]]; then
    lxbuild="true"
    UXARCH="$1"
elif [[ ($# -eq 2) &&  ("$2" = "nobuild") ]]; then
    UXARCH="$1"
    lxbuild="false"
elif [[ ($# -eq 2) &&  ("$2" != "nobuild") ]]; then
    UXARCH="$1"

# If <Platform_id> is not configured, detects the platform of users.
elif [[ $# -eq 0 ]]; then
    OSCHK=`uname`

if echo "$OSCHK" | grep -q "Linux"; then
    UXARCH=lin
elif echo "$OSCHK" | grep -q "Darwin"; then
    UXARCH=macos
elif echo "$OSCHK" | grep -q "SunOS"; then
    UXARCH=sol
elif echo "$OSCHK" | grep -q "CYGWIN"; then
    UXARCH=win
else
    echo "$lxprog" error: platform \"$OSCHK\" is not supported
    exit 1
fi

# When the number of arguments is greater than 2, prints error message 
else  
    echo "$lxprog" error: arg count
    exit 1
fi

# Check if UXDICE path is set
if [ -z "$UXDICE" ]; then
    echo "$lxprog" error: UXDICE is not set
    exit 1
fi

# Validate the platform argument below
archcheck=""
archcheck=`"$UXDICE"/core/scripts/bash/common/dxvldarch "$UXARCH"`
if [[ "$archcheck" == "invalid" ]]; then
    echo "$lxprog" error: invalid platform specification 
    echo Choices are: lin, macos, sol, win
    exit 1
fi  

mkdir -p dice_user/startup

if [ $? -ne 0 ]; then
    echo "$lxprog" error: Could not make directory --- \"dice_user/startup\"
    exit 1
fi

pushd .
cd dice_user/startup

lxfile="uxdefs_dice"
lxheader="$UXDICE"/setup/uxdefs-header.txt
if [ -f "$lxfile" ]; then
    mv "$lxfile" "$lxfile".bak
fi
touch "$lxfile"
cat "$lxheader" >> "$lxfile"

# Insert code to set the architecture
echo UXARCH="$UXARCH" >> "$lxfile"

# Insert code to set the DICE installation directory.
# Set the UXDICE variable only if it has not been previously set. This
# allows the setting to be controlled, if desired, from earlier startup or
# configuration processes.
echo if \[ -z \"\$UXDICE\" \]\; then >> "$lxfile"
echo "    "UXDICE="$UXDICE" >> "$lxfile"
echo fi >> "$lxfile"

lxfile="dice_startup"
if [ -f "$lxfile" ]; then
    mv "$lxfile" "$lxfile".bak
fi
cp "$UXDICE"/setup/"$lxfile" .

# Modified to exit after setup without building
if [ "$lxbuild" = "false" ]; then
    echo "$lxprog": setup complete.
    echo To start up DICE, run \"source startup/dice_startup\"
    echo from this directory.
    exit 0
fi

# Start up DICE
cd ..
source startup/dice_startup
if [ $? -ne 0 ]; then
    echo "$lxprog" error: problem encountered when starting up DICE
    popd
    exit 1
fi

# Build DICE
dxbuild
if [ $? -ne 0 ]; then
    echo "$lxprog" error: problem encountered when bulding DICE
    popd
    exit 1
fi

popd

echo "$lxprog": setup and build complete
