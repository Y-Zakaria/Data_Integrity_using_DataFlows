#!/usr/bin/env bash

#############################################################################
# @ddblock_begin copyright
#
# Copyright (c) 1997-2015
# Maryland DSPCAD Research Group, The University of Maryland at College Park 
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF MARYLAND BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF MARYLAND HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF MARYLAND SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# MARYLAND HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# @ddblock_end copyright
#############################################################################

#
# Script that compares the contents of all files in the current directory 
# whose filename starts with the string 'output' with the 
# corresponding correct-output file.
#
# Usage: dlxdiffprefix <prefix1> <prefix2> <suffix> <diffargs> <verbose>
#
# This script compares all files with names of the form <prefix1><xyz><suffix>
# with corresponding files with names of the form 
# <prefix2><prefix1><xyz><suffix>. The "diff" utility with the given
# set of arguments <diffargs> is used to do the file comparison.
#
# For example, if prefix1=output, prefix2="correct-", and suffix=".txt",
# then the following comparisons could be carried out:
#
# diff output1.txt correct-output1.txt     (xyz=1)
# diff output2.txt correct-output2.txt     (xyz=2)
# diff output3.txt correct-output3.txt     (xyz=3)
#
# (provided that these six files all exist in the current working directory)
#
# The verbose argument should be a non-empty-string (anything other
# than "") to enable verbose output.
#
# Five arguments must be passed to this function. If some arugment fields
# are not "used" (e.g., no suffix or diff arugments are needed), then
# empty strings ("" arguments) should be passed in those argument positions. 
# 
# @author Soujanya A. Kedilaya, Shuvra S. Bhattacharyya 
#

dxprog=dlxdiffprefix

if [[ ($# -eq 0) ]]; then
    echo $dxprog usage: prefix1 prefix2 suffix diffargs verbose
    exit 0
fi

if [[ ($# -ne 5) ]]; then
    echo $dxprog error: arg count
    exit 1
fi

prefix1=$1
prefix2=$2
suffix=$3
diffargs=$4
verbose=$5

if [ -z "$prefix1" ]; then
    echo $dxprog error: null prefix1
    exit 1
fi

if [ -z "$prefix2" ]; then
    echo $dxprog error: null prefix2
    exit 1
fi

for file1 in `ls -d $prefix1*$suffix` ; do
    [ -d "$file1" ] && continue
    file2="$prefix2$file1"
    if [ -f "$file2"  ]; then 
        if [ -n "$verbose" ]; then
            echo dlxdiffprefix: comparing $file1 and $file2
        fi
        diff "$diffargs" "$file1" "$file2"
    else
        if [ -n "$verbose" ]; then
            echo $dxprog warning: $file2 does not exist
        fi
    fi
done
